{
  "version": 3,
  "sources": ["../../layercake/dist/utils/canBeZero.js", "../../layercake/dist/utils/makeAccessor.js", "../../layercake/dist/utils/filterObject.js", "../../layercake/dist/utils/debounce.js", "../../layercake/dist/lib/calcUniques.js", "../../layercake/dist/lib/calcExtents.js", "../../layercake/dist/utils/arraysEqual.js", "../../layercake/dist/helpers/isOrdinalDomain.js", "../../layercake/dist/helpers/calcScaleExtents.js", "../../layercake/dist/utils/partialDomain.js", "../../layercake/dist/helpers/calcDomain.js", "../../layercake/dist/settings/defaultScales.js", "../../layercake/dist/helpers/findScaleType.js", "../../layercake/dist/utils/identity.js", "../../layercake/dist/helpers/getPadFunctions.js", "../../layercake/dist/helpers/toTitleCase.js", "../../layercake/dist/helpers/findScaleName.js", "../../layercake/dist/utils/padScale.js", "../../layercake/dist/settings/getDefaultRange.js", "../../layercake/dist/helpers/createScale.js", "../../layercake/dist/helpers/createGetter.js", "../../layercake/dist/helpers/getRange.js", "../../layercake/dist/helpers/printDebug.js", "../../layercake/dist/LayerCake.svelte", "../../layercake/dist/layouts/Html.svelte", "../../layercake/dist/layouts/Svg.svelte", "../../layercake/dist/layouts/ScaledSvg.svelte", "../../layercake/dist/lib/scaleCanvas.js", "../../layercake/dist/layouts/Canvas.svelte", "../../layercake/dist/layouts/Webgl.svelte", "../../layercake/dist/lib/flatten.js", "../../layercake/dist/lib/uniques.js", "../../layercake/dist/lib/raise.js", "../../layercake/dist/lib/takeEvery.js", "../../layercake/dist/lib/bin.js", "../../layercake/dist/lib/stack.js", "../../layercake/dist/lib/groupLonger.js"],
  "sourcesContent": ["/**\n\tA function to help truth test values. Returns a `true` if zero.\n\t@param {any} val The value to test.\n\t@returns {any}\n*/\nexport default function canBeZero(val) {\n\tif (val === 0) {\n\t\treturn true;\n\t}\n\treturn val;\n}\n", "import canBeZero from './canBeZero.js';\n/**\n\tMake an accessor from a string, number, function or an array of the combination of any\n\t@param {String|Number|Function|Array} acc The accessor function, key or list of them.\n\t@returns {Function} An accessor function.\n*/\nexport default function makeAccessor(acc) {\n\tif (!canBeZero(acc)) return null;\n\tif (Array.isArray(acc)) {\n\t\treturn d =>\n\t\t\tacc.map(k => {\n\t\t\t\treturn typeof k !== 'function' ? d[k] : k(d);\n\t\t\t});\n\t} else if (typeof acc !== 'function') {\n\t\treturn d => d[acc];\n\t}\n\treturn acc;\n}\n", "/**\n\tRemove undefined fields from an object\n\t@param {object} obj The object to filter\n\t@param {object} [comparisonObj={}] An object that, for any key, if the key is not present on that object, the key will be filtered out. Note, this ignores the value on that object\n\t@returns {object}\n*/\nexport default function filterObject(obj, comparisonObj = {}) {\n\treturn Object.fromEntries(\n\t\tObject.entries(obj).filter(([key, value]) => {\n\t\t\treturn value !== undefined && comparisonObj[key] === undefined;\n\t\t})\n\t);\n}\n", "/**\n\tA simple debounce function taken from here https://www.freecodecamp.org/news/javascript-debounce-example/\n\t@param {function} func The function to debounce.\n\t@param {number} timeout The time in ms to wait.\n\t@returns {function}\n*/\nexport default function debounce(func, timeout = 300) {\n\tlet timer;\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tfunc.apply(this, args);\n\t\t}, timeout);\n\t};\n}\n", "import { ascending, InternSet } from 'd3-array';\n\n/**\n\tCalculate the unique values of desired fields\n\tFor example, data like this:\n\t[{ x: 0, y: -10 }, { x: 10, y: 0 }, { x: 5, y: 10 }]\n\tand a fields object like this:\n\t`{'x': d => d.x, 'y': d => d.y}`\n\treturns an object like this:e\n\t`{ x: [0, 10, 5], y: [-10, 0, 10] }`\n\t@param {Array} data A flat array of.\n\t@param {{x?: Function, y?: Function, z?: Function, r?: Function}} fields An object containing `x`, `y`, `r` or `z` keys that equal an accessor function. If an accessor function returns an array of values, each value will also be evaluated.\n\t@param {{ sort?: boolean, x?: boolean , y?: boolean , z?: boolean , r?: boolean }} sortOptions An object containing `sort`, `x`, `y`, `r` or `z` keys with boolean values that designate how results should be sorted. Default is un-sorted. Pass in `sort: true` to sort all fields or specify fields individually.\n\t@returns {{x?: [min: Number, max: Number]|[min: String, max: String], y?: [min: Number, max: Number]|[min: String, max: String], z?: [min: Number, max: Number]|[min: String, max: String], r?: [min: Number, max: Number]|[min: String, max: String]}} An object with the same structure as `fields` but instead of an accessor, each key contains an array of unique items.\n*/\nexport default function calcUniques(data, fields, sortOptions = {}) {\n\tif (!Array.isArray(data)) {\n\t\tthrow new TypeError(\n\t\t\t`The first argument of calcUniques() must be an array. You passed in a ${typeof data}. If you got this error using the <LayerCake> component, consider passing a flat array to the \\`flatData\\` prop. More info: https://layercake.graphics/guide/#flatdata`\n\t\t);\n\t}\n\n\tif (Array.isArray(fields) || fields === undefined || fields === null) {\n\t\tthrow new TypeError(\n\t\t\t'The second argument of calcUniques() must be an ' +\n\t\t\t\t'object with field names as keys as accessor functions as values.'\n\t\t);\n\t}\n\n\tconst uniques = {};\n\n\tconst keys = Object.keys(fields);\n\tconst kl = keys.length;\n\tlet i;\n\tlet j;\n\tlet k;\n\tlet s;\n\tlet acc;\n\tlet val;\n\tlet set;\n\n\tconst dl = data.length;\n\tfor (i = 0; i < kl; i += 1) {\n\t\tset = new InternSet();\n\t\ts = keys[i];\n\t\tacc = fields[s];\n\t\tfor (j = 0; j < dl; j += 1) {\n\t\t\tval = acc(data[j]);\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\tconst vl = val.length;\n\t\t\t\tfor (k = 0; k < vl; k += 1) {\n\t\t\t\t\tset.add(val[k]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tset.add(val);\n\t\t\t}\n\t\t}\n\t\tconst results = Array.from(set);\n\t\tif (sortOptions.sort === true || sortOptions[s] === true) {\n\t\t\tresults.sort(ascending);\n\t\t}\n\t\tuniques[s] = results;\n\t}\n\treturn uniques;\n}\n", "/**\n\tCalculate the extents of desired fields, skipping `false`, `undefined`, `null` and `NaN` values\n\tFor example, data like this:\n\t[{ x: 0, y: -10 }, { x: 10, y: 0 }, { x: 5, y: 10 }]\n\tand a fields object like this:\n\t`{'x': d => d.x, 'y': d => d.y}`\n\treturns an object like this:\n\t`{ x: [0, 10], y: [-10, 10] }`\n\t@param {Array} data A flat array of objects.\n\t@param {{x?: Function, y?: Function, z?: Function, r?: Function}} fields An object containing `x`, `y`, `r` or `z` keys that equal an accessor function. If an accessor function returns an array of values, each value will also be evaluated.\n\t@returns {{x?: [min: Number, max: Number]|[min: String, max: String], y?: [min: Number, max: Number]|[min: String, max: String], z?: [min: Number, max: Number]|[min: String, max: String], r?: [min: Number, max: Number]|[min: String, max: String]}} An object with the same structure as `fields` but instead of an accessor, each key contains an array of a min and a max.\n*/\nexport default function calcExtents(data, fields) {\n\tif (!Array.isArray(data)) {\n\t\tthrow new TypeError(\n\t\t\t`The first argument of calcExtents() must be an array. You passed in a ${typeof data}. If you got this error using the <LayerCake> component, consider passing a flat array to the \\`flatData\\` prop. More info: https://layercake.graphics/guide/#flatdata`\n\t\t);\n\t}\n\n\tif (Array.isArray(fields) || fields === undefined || fields === null) {\n\t\tthrow new TypeError(\n\t\t\t'The second argument of calcExtents() must be an ' +\n\t\t\t\t'object with field names as keys as accessor functions as values.'\n\t\t);\n\t}\n\n\tconst extents = {};\n\n\tconst keys = Object.keys(fields);\n\tconst kl = keys.length;\n\tlet i;\n\tlet j;\n\tlet k;\n\tlet s;\n\tlet min;\n\tlet max;\n\tlet acc;\n\tlet val;\n\n\tconst dl = data.length;\n\tfor (i = 0; i < kl; i += 1) {\n\t\ts = keys[i];\n\t\tacc = fields[s];\n\t\tmin = null;\n\t\tmax = null;\n\t\tfor (j = 0; j < dl; j += 1) {\n\t\t\tval = acc(data[j], j);\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\tconst vl = val.length;\n\t\t\t\tfor (k = 0; k < vl; k += 1) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tval[k] !== false &&\n\t\t\t\t\t\tval[k] !== undefined &&\n\t\t\t\t\t\tval[k] !== null &&\n\t\t\t\t\t\tNumber.isNaN(val[k]) === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (min === null || val[k] < min) {\n\t\t\t\t\t\t\tmin = val[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (max === null || val[k] > max) {\n\t\t\t\t\t\t\tmax = val[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tval !== false &&\n\t\t\t\tval !== undefined &&\n\t\t\t\tval !== null &&\n\t\t\t\tNumber.isNaN(val) === false\n\t\t\t) {\n\t\t\t\tif (min === null || val < min) {\n\t\t\t\t\tmin = val;\n\t\t\t\t}\n\t\t\t\tif (max === null || val > max) {\n\t\t\t\t\tmax = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\textents[s] = [min, max];\n\t}\n\n\treturn extents;\n}\n", "/**\n  Determine whether two arrays equal one another, order not important.\n\tThis uses includes instead of converting to a set because this is only\n\tused internally on a small array size and it's not worth the cost\n\tof making a set\n\t@param {Array} arr1 An array to test\n\t@param {Array} arr2 An array to test against\n\t@returns {boolean} Whether they contain all and only the same items\n */\nexport default function arraysEqual(arr1, arr2) {\n\tif (arr1.length !== arr2.length) return false;\n\treturn arr1.every(k => {\n\t\treturn arr2.includes(k);\n\t});\n}\n", "import arraysEqual from '../utils/arraysEqual.js';\n\n/**\n  Determine whether a scale has an ordinal domain\n\thttps://svelte.dev/repl/ec6491055208401ca41120c9c8a67737?version=3.49.0\n\t@param {Function} scale A D3 scale\n\t@returns {boolean} Whether the scale is an ordinal scale\n */\nexport default function isOrdinalDomain(scale) {\n\t// scaleBand, scalePoint\n\t// @ts-ignore\n\tif (typeof scale.bandwidth === 'function') {\n\t\treturn true;\n\t}\n\t// scaleOrdinal\n\tif (arraysEqual(Object.keys(scale), ['domain', 'range', 'unknown', 'copy'])) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "import calcUniques from '../lib/calcUniques.js';\nimport calcExtents from '../lib/calcExtents.js';\n\nimport isOrdinalDomain from './isOrdinalDomain.js';\n\n/* --------------------------------------------\n * Figure out which of our scales are ordinal\n * and calculate unique items for them\n * for the others, calculate an extent\n */\nexport default function calcScaleExtents(flatData, getters, activeScales) {\n\tconst scaleGroups = Object.entries(activeScales).reduce(\n\t\t(groups, [k, scaleInfo]) => {\n\t\t\tconst domainType = isOrdinalDomain(scaleInfo.scale) === true ? 'ordinal' : 'other';\n\t\t\t// @ts-ignore\n\t\t\tif (!groups[domainType]) groups[domainType] = {};\n\t\t\tgroups[domainType][k] = getters[k];\n\t\t\treturn groups;\n\t\t},\n\t\t{ ordinal: false, other: false }\n\t);\n\n\tlet extents = {};\n\tif (scaleGroups.ordinal) {\n\t\tconst sortOptions = Object.fromEntries(\n\t\t\tObject.entries(activeScales).map(([k, scaleInfo]) => {\n\t\t\t\treturn [k, scaleInfo.sort];\n\t\t\t})\n\t\t);\n\t\textents = calcUniques(flatData, scaleGroups.ordinal, sortOptions);\n\t}\n\tif (scaleGroups.other) {\n\t\t// @ts-ignore\n\t\textents = { ...extents, ...calcExtents(flatData, scaleGroups.other) };\n\t}\n\n\treturn extents;\n}\n", "/**\n\tIf we have a domain from settings (the directive), fill in\n\tany null values with ones from our measured extents\n\totherwise, return the measured extent\n\t@param {Number[]} domain A two-value array of numbers\n\t@param {Number[]} directive A two-value array of numbers that will have any nulls filled in from the `domain` array\n\t@returns {Number[]} The filled in domain\n*/\nexport default function partialDomain(domain = [], directive) {\n\tif (Array.isArray(directive) === true) {\n\t\treturn directive.map((d, i) => {\n\t\t\tif (d === null) {\n\t\t\t\treturn domain[i];\n\t\t\t}\n\t\t\treturn d;\n\t\t});\n\t}\n\treturn domain;\n}\n", "import partialDomain from '../utils/partialDomain.js';\n\nexport default function calcDomain(s) {\n\treturn function domainCalc([$extents, $domain]) {\n\t\tif (typeof $domain === 'function') {\n\t\t\t$domain = $domain($extents[s]);\n\t\t}\n\t\treturn $extents ? partialDomain($extents[s], $domain) : $domain;\n\t};\n}\n", "import { scaleLinear, scaleSqrt } from 'd3-scale';\n\nexport default {\n\tx: scaleLinear,\n\ty: scaleLinear,\n\tz: scaleLinear,\n\tr: scaleSqrt\n};\n", "/* --------------------------------------------\n *\n * Determine whether a scale is a log, symlog, power or other\n * This is not meant to be exhaustive of all the different types of\n * scales in d3-scale and focuses on continuous scales\n *\n * --------------------------------------------\n */\nexport default function findScaleType(scale) {\n\tif (scale.constant) {\n\t\treturn 'symlog';\n\t}\n\tif (scale.base) {\n\t\treturn 'log';\n\t}\n\tif (scale.exponent) {\n\t\tif (scale.exponent() === 0.5) {\n\t\t\treturn 'sqrt';\n\t\t}\n\t\treturn 'pow';\n\t}\n\treturn 'other';\n}\n", "/**\n\tAn identity function\n\t@param {any} d The value to return.\n\t@returns {any}\n*/\nexport default function identity(d) {\n\treturn d;\n}\n", "import findScaleType from './findScaleType.js';\nimport identity from '../utils/identity.js';\n\nfunction log(sign) {\n\treturn x => Math.log(sign * x);\n}\n\nfunction exp(sign) {\n\treturn x => sign * Math.exp(x);\n}\n\nfunction symlog(c) {\n\treturn x => Math.sign(x) * Math.log1p(Math.abs(x / c));\n}\n\nfunction symexp(c) {\n\treturn x => Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n}\n\nfunction pow(exponent) {\n\treturn function powFn(x) {\n\t\treturn x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t};\n}\n\nexport default function getPadFunctions(scale) {\n\tconst scaleType = findScaleType(scale);\n\n\tif (scaleType === 'log') {\n\t\tconst sign = Math.sign(scale.domain()[0]);\n\t\treturn { lift: log(sign), ground: exp(sign), scaleType };\n\t}\n\tif (scaleType === 'pow') {\n\t\tconst exponent = 1;\n\t\treturn { lift: pow(exponent), ground: pow(1 / exponent), scaleType };\n\t}\n\tif (scaleType === 'sqrt') {\n\t\tconst exponent = 0.5;\n\t\treturn { lift: pow(exponent), ground: pow(1 / exponent), scaleType };\n\t}\n\tif (scaleType === 'symlog') {\n\t\tconst constant = 1;\n\t\treturn { lift: symlog(constant), ground: symexp(constant), scaleType };\n\t}\n\n\treturn { lift: identity, ground: identity, scaleType };\n}\n", "export default function toTitleCase(str) {\n\treturn str.replace(/^\\w/, d => d.toUpperCase());\n}\n", "import arraysEqual from '../utils/arraysEqual.js';\nimport t from '../helpers/toTitleCase.js';\n\nfunction f(name, modifier = '') {\n\treturn `scale${t(modifier)}${t(name)}`;\n}\n\n/**\n  Get a D3 scale name\n\thttps://svelte.dev/repl/ec6491055208401ca41120c9c8a67737?version=3.49.0\n\t@param {Function} scale A D3 scale\n\t@returns {String} The scale's name\n */\nexport default function findScaleName(scale) {\n\t/**\n\t * Ordinal scales\n\t */\n\t// scaleBand, scalePoint\n\t// @ts-ignore\n\tif (typeof scale.bandwidth === 'function') {\n\t\t// @ts-ignore\n\t\tif (typeof scale.paddingInner === 'function') {\n\t\t\treturn f('band');\n\t\t}\n\t\treturn f('point');\n\t}\n\t// scaleOrdinal\n\tif (arraysEqual(Object.keys(scale), ['domain', 'range', 'unknown', 'copy'])) {\n\t\treturn f('ordinal');\n\t}\n\n\t/**\n\t * Sequential versus divergin\n\t */\n\tlet modifier = '';\n\t// @ts-ignore\n\tif (scale.interpolator) {\n\t\t// @ts-ignore\n\t\tif (scale.domain().length === 3) {\n\t\t\tmodifier = 'diverging';\n\t\t} else {\n\t\t\tmodifier = 'sequential';\n\t\t}\n\t}\n\n\t/**\n\t * Continuous scales\n\t */\n\t// @ts-ignore\n\tif (scale.quantiles) {\n\t\treturn f('quantile', modifier);\n\t}\n\t// @ts-ignore\n\tif (scale.thresholds) {\n\t\treturn f('quantize', modifier);\n\t}\n\t// @ts-ignore\n\tif (scale.constant) {\n\t\treturn f('symlog', modifier);\n\t}\n\t// @ts-ignore\n\tif (scale.base) {\n\t\treturn f('log', modifier);\n\t}\n\t// @ts-ignore\n\tif (scale.exponent) {\n\t\t// @ts-ignore\n\t\tif (scale.exponent() === 0.5) {\n\t\t\treturn f('sqrt', modifier);\n\t\t}\n\t\treturn f('pow', modifier);\n\t}\n\n\tif (arraysEqual(Object.keys(scale), ['domain', 'range', 'invertExtent', 'unknown', 'copy'])) {\n\t\treturn f('threshold');\n\t}\n\n\tif (\n\t\tarraysEqual(Object.keys(scale), [\n\t\t\t'invert',\n\t\t\t'range',\n\t\t\t'domain',\n\t\t\t'unknown',\n\t\t\t'copy',\n\t\t\t'ticks',\n\t\t\t'tickFormat',\n\t\t\t'nice'\n\t\t])\n\t) {\n\t\treturn f('identity');\n\t}\n\n\tif (\n\t\tarraysEqual(Object.keys(scale), [\n\t\t\t'invert',\n\t\t\t'domain',\n\t\t\t'range',\n\t\t\t'rangeRound',\n\t\t\t'round',\n\t\t\t'clamp',\n\t\t\t'unknown',\n\t\t\t'copy',\n\t\t\t'ticks',\n\t\t\t'tickFormat',\n\t\t\t'nice'\n\t\t])\n\t) {\n\t\treturn f('radial');\n\t}\n\n\tif (modifier) {\n\t\treturn f(modifier);\n\t}\n\n\t/**\n\t * Test for scaleTime vs scaleUtc\n\t * https://github.com/d3/d3-scale/pull/274#issuecomment-1462935595\n\t */\n\t// @ts-ignore\n\tif (scale.domain()[0] instanceof Date) {\n\t\tconst d = new Date();\n\t\tlet s;\n\t\t// @ts-ignore\n\t\td.getDay = () => (s = 'time');\n\t\t// @ts-ignore\n\t\td.getUTCDay = () => (s = 'utc');\n\n\t\t// @ts-ignore\n\t\tscale.tickFormat(0, '%a')(d);\n\t\treturn f(s);\n\t}\n\n\treturn f('linear');\n}\n", "/**\n\tReturns a modified scale domain by in/decreasing\n\tthe min/max by taking the desired difference\n\tin pixels and converting it to units of data.\n\tReturns an array that you can set as the new domain.\n\tPadding contributed by @veltman.\n\tSee here for discussion of transforms: https://github.com/d3/d3-scale/issues/150\n\t@param {Function} scale A D3 scale funcion\n\t@param {Number[]} padding A two-value array of numbers specifying padding in pixels\n\t@returns {Number[]} The padded domain\n*/\nimport isOrdinalDomain from '../helpers/isOrdinalDomain.js';\nimport getPadFunctions from '../helpers/getPadFunctions.js';\nimport findScaleName from '../helpers/findScaleName.js';\n\n// These scales have a discrete range so they can't be padded\nconst unpaddable = ['scaleThreshold', 'scaleQuantile', 'scaleQuantize', 'scaleSequentialQuantile'];\n\nexport default function padScale(scale, padding) {\n\tif (typeof scale.range !== 'function') {\n\t\tthrow new Error('Scale method `range` must be a function');\n\t}\n\tif (typeof scale.domain !== 'function') {\n\t\tthrow new Error('Scale method `domain` must be a function');\n\t}\n\n\tif (!Array.isArray(padding) || unpaddable.includes(findScaleName(scale))) {\n\t\treturn scale.domain();\n\t}\n\n\tif (isOrdinalDomain(scale) === true) {\n\t\treturn scale.domain();\n\t}\n\n\tconst { lift, ground } = getPadFunctions(scale);\n\n\tconst d0 = scale.domain()[0];\n\n\tconst isTime = Object.prototype.toString.call(d0) === '[object Date]';\n\n\tconst [d1, d2] = scale.domain().map(d => {\n\t\treturn isTime ? lift(d.getTime()) : lift(d);\n\t});\n\tconst [r1, r2] = scale.range();\n\tconst paddingLeft = padding[0] || 0;\n\tconst paddingRight = padding[1] || 0;\n\n\tconst step = (d2 - d1) / (Math.abs(r2 - r1) - paddingLeft - paddingRight); // Math.abs() to properly handle reversed scales\n\n\treturn [d1 - paddingLeft * step, paddingRight * step + d2].map(d => {\n\t\treturn isTime ? ground(new Date(d)) : ground(d);\n\t});\n}\n", "function calcBaseRange(s, width, height, reverse, percentRange) {\n\tlet min;\n\tlet max;\n\tif (percentRange === true) {\n\t\tmin = 0;\n\t\tmax = 100;\n\t} else {\n\t\tmin = s === 'r' ? 1 : 0;\n\t\tmax = s === 'y' ? height : s === 'r' ? 25 : width;\n\t}\n\treturn reverse === true ? [max, min] : [min, max];\n}\n\nexport default function getDefaultRange(s, width, height, reverse, range, percentRange) {\n\treturn !range\n\t\t? calcBaseRange(s, width, height, reverse, percentRange)\n\t\t: typeof range === 'function'\n\t\t\t? range({ width, height })\n\t\t\t: range;\n}\n", "import defaultScales from '../settings/defaultScales.js';\nimport padScale from '../utils/padScale.js';\nimport getDefaultRange from '../settings/getDefaultRange.js';\n\nexport default function createScale(s) {\n\treturn function scaleCreator([\n\t\t$scale,\n\t\t$extents,\n\t\t$domain,\n\t\t$padding,\n\t\t$nice,\n\t\t$reverse,\n\t\t$width,\n\t\t$height,\n\t\t$range,\n\t\t$percentScale\n\t]) {\n\t\tif ($extents === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst defaultRange = getDefaultRange(s, $width, $height, $reverse, $range, $percentScale);\n\n\t\tconst scale = $scale === defaultScales[s] ? $scale() : $scale.copy();\n\n\t\t/* --------------------------------------------\n\t\t * Set the domain\n\t\t */\n\t\tscale.domain($domain);\n\n\t\t/* --------------------------------------------\n\t\t * Set the range of the scale to our default if\n\t\t * the scale doesn't have an interpolator function\n\t\t * or if it does, still set the range if that function\n\t\t * is the default identity function\n\t\t */\n\t\tif (\n\t\t\t!scale.interpolator ||\n\t\t\t(typeof scale.interpolator === 'function' && scale.interpolator().name.startsWith('identity'))\n\t\t) {\n\t\t\tscale.range(defaultRange);\n\t\t}\n\n\t\tif ($padding) {\n\t\t\tscale.domain(padScale(scale, $padding));\n\t\t}\n\n\t\tif ($nice === true || typeof $nice === 'number') {\n\t\t\tif (typeof scale.nice === 'function') {\n\t\t\t\tscale.nice(typeof $nice === 'number' ? $nice : undefined);\n\t\t\t} else {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`[Layer Cake] You set \\`${s}Nice: true\\` but the ${s}Scale does not have a \\`.nice\\` method. Ignoring...`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn scale;\n\t};\n}\n", "export default function createGetter([$acc, $scale]) {\n\treturn (d, i) => {\n\t\tconst val = $acc(d, i);\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.map(v => $scale(v));\n\t\t}\n\t\treturn $scale(val);\n\t};\n}\n", "export default function getRange([$scale]) {\n\tif (typeof $scale === 'function') {\n\t\tif (typeof $scale.range === 'function') {\n\t\t\treturn $scale.range();\n\t\t}\n\t\tconsole.error(\"[LayerCake] Your scale doesn't have a `.range` method?\");\n\t}\n\treturn null;\n}\n", "import { rgb } from 'd3-color';\n\nimport findScaleName from './findScaleName.js';\nimport t from './toTitleCase.js';\n\nconst indent = '    ';\n\nfunction getRgb(clr) {\n\tconst { r, g, b, opacity: o } = rgb(clr);\n\tif (![r, g, b].every(c => c >= 0 && c <= 255)) {\n\t\treturn false;\n\t}\n\treturn { r, g, b, o };\n}\n\n/**\n * Calculate human-perceived lightness from RGB\n * This doesn't take opacity into account\n * https://stackoverflow.com/a/596243\n */\nfunction contrast({ r, g, b }) {\n\tconst luminance = (0.2126 * r + 0.7152 * g + 0.0722 * b) / 255;\n\treturn luminance > 0.6 ? 'black' : 'white';\n}\n\n/* --------------------------------------------\n *\n * Print out the values of an object\n * --------------------------------------------\n */\nexport default function printDebug(obj) {\n\tconsole.log('/********* LayerCake Debug ************/');\n\tconsole.log('Bounding box:');\n\tprintObject(obj.boundingBox);\n\tconsole.log('Data:');\n\tconsole.log(indent, obj.data);\n\tif (obj.flatData) {\n\t\tconsole.log('flatData:');\n\t\tconsole.log(indent, obj.flatData);\n\t}\n\tconsole.log('Scales:');\n\tObject.keys(obj.activeGetters).forEach(g => {\n\t\tprintScale(g, obj[`${g}Scale`], obj[g]);\n\t});\n\tconsole.log('/************ End LayerCake Debug ***************/\\n');\n}\n\nfunction printObject(obj) {\n\tObject.entries(obj).forEach(([key, value]) => {\n\t\tconsole.log(`${indent}${key}:`, value);\n\t});\n}\n\nfunction printScale(s, scale, acc) {\n\tconst scaleName = findScaleName(scale);\n\tconsole.log(`${indent}${s}:`);\n\tconsole.log(`${indent}${indent}Accessor: \"${acc.toString()}\"`);\n\tconsole.log(`${indent}${indent}Type: ${scaleName}`);\n\tprintValues(scale, 'domain');\n\tprintValues(scale, 'range', ' ');\n}\n\nfunction printValues(scale, method, extraSpace = '') {\n\tconst values = scale[method]();\n\tconst colorValues = colorizeArray(values);\n\tif (colorValues) {\n\t\tprintColorArray(colorValues, method, values);\n\t} else {\n\t\tconsole.log(`${indent}${indent}${t(method)}:${extraSpace}`, values);\n\t}\n}\n\nfunction printColorArray(colorValues, method, values) {\n\tconsole.log(\n\t\t`${indent}${indent}${t(method)}:    %cArray%c(${values.length}) ` + colorValues[0] + '%c ]',\n\t\t'color: #1377e4',\n\t\t'color: #737373',\n\t\t'color: #1478e4',\n\t\t...colorValues[1],\n\t\t'color: #1478e4'\n\t);\n}\nfunction colorizeArray(arr) {\n\tconst colors = [];\n\tconst a = arr.map((d, i) => {\n\t\tconst rgbo = getRgb(d);\n\t\tif (rgbo !== false) {\n\t\t\tcolors.push(rgbo);\n\t\t\t// Add a space to the last item\n\t\t\tconst space = i === arr.length - 1 ? ' ' : '';\n\t\t\treturn `%c ${d}${space}`;\n\t\t}\n\t\treturn d;\n\t});\n\tif (colors.length) {\n\t\treturn [\n\t\t\t`%c[ ${a.join(', ')}`,\n\t\t\tcolors.map(\n\t\t\t\td => `background-color: rgba(${d.r}, ${d.g}, ${d.b}, ${d.o}); color:${contrast(d)};`\n\t\t\t)\n\t\t];\n\t}\n\treturn null;\n}\n", null, null, null, null, "/**\n\tScales a canvas. From Paul Lewis: http://www.html5rocks.com/en/tutorials/canvas/hidpi/\n\t@param {CanvasRenderingContext2D} ctx A canvas context.\n\t@param {Number} width The container width.\n\t@param {Number} height The container height.\n\t@returns {{width: Number, height: Number}}\n*/\nexport default function (ctx, width, height) {\n\tconst dpr = window.devicePixelRatio || 1;\n\n\tctx.canvas.width = width * dpr;\n\tctx.canvas.height = height * dpr;\n\n\tctx.canvas.style.width = `${width}px`;\n\tctx.canvas.style.height = `${height}px`;\n\n\tctx.scale(dpr, dpr);\n\treturn { width: ctx.canvas.width, height: ctx.canvas.height };\n}\n", null, null, "/**\n\tFlatten arrays of arrays one level deep\n\t@param {Array} list The list to flatten.\n\t@param {String|Function} accessor An optional accessor function. If this is a string, it will be transformed into an accessor for that key.\n\t@returns {Array}\n*/\nexport default function flatten(list, accessor = d => d) {\n\tconst acc = typeof accessor === 'string' ? d => d[accessor] : accessor;\n\tif (Array.isArray(list) && Array.isArray(acc(list[0]))) {\n\t\tlet flat = [];\n\t\tconst l = list.length;\n\t\tfor (let i = 0; i < l; i += 1) {\n\t\t\tflat = flat.concat(acc(list[i]));\n\t\t}\n\t\treturn flat;\n\t}\n\treturn list;\n}\n", "/**\n\tRemove duplicate values from a list with an optional iterator string or function. By default return the transformed value if iteratee exists.\n\t@param {Array} list An array of values or objects.\n\t@param {String|Function} [accessor] An optional accessor function that takes an object and returns the value to judge uniqueness by. If accessor is a string instead of a function, judges uniqueness by the property named by accessor on each of the objects.\n\t@param {boolean} [transform=true] If true, return the transformed value from accessor.\n\t@returns {Array}\n*/\n\nexport default function uniques(list, accessor, transform = true) {\n\tif (!Array.isArray(list)) {\n\t\tconsole.error('LayerCake error: Input value to `uniques` must be a list.');\n\t\treturn null;\n\t}\n\tconst ll = list.length;\n\tconst iterater = typeof accessor === 'function';\n\tconst key = typeof accessor !== 'undefined';\n\tconst seen = new Set();\n\tconst result = [];\n\tfor (let i = 0; i < ll; i += 1) {\n\t\tconst d = list[i];\n\t\tconst computed = iterater ? accessor(d) : key === true ? d[accessor] : d;\n\t\tif (!seen.has(computed)) {\n\t\t\tseen.add(computed);\n\t\t\tresult.push(transform ? computed : d);\n\t\t}\n\t}\n\treturn result;\n}\n", "/**\n\tMove an element to the last child. Adapted from d3-selection `.raise`: https://github.com/d3/d3-selection#selection_raise\n\t@param {Element} el The list to flatten.\n*/\nexport default function raise(el) {\n\tif (el.nextSibling) el.parentNode.appendChild(el);\n}\n", "/**\n\tFilters a list for every n entries\n  useful for slimming down the number of ticks\n  in an axis\n\t@param {Array} list A list of items\n\t@param {Number} n Take one item every n times. So if you set this to 5, every fifth element will be taken, including the 0th.\n\t@returns {Array}\n*/\nexport default function takeEvery(list, n) {\n\tif (list.length <= n) return list;\n\tconst e = Math.round(list.length / n);\n\treturn list.filter((d, i) => {\n\t\treturn i % e === 0;\n\t});\n}\n", "/**\n  Bins and counts your data.\n\tA wrapper around [d3-array#bin](https://github.com/d3/d3-array#bin)\n\n\t// Input data\n\tconst data = [\n\t\t{ myX: 0 },\n\t\t{ myX: 1 },\n\t\t{ myX: 2 },\n\t\t{ myX: 4 },\n\t\t{ myX: 2 },\n\t\t{ myX: 8 },\n\t\t{ myX: 1 },\n\t\t{ myX: 4 },\n\t\t{ myX: 7 }\n\t];\n\n\t// Usage\n\tbin(data, 'myX');\n\t// or...\n\tbin(data, d => d.myX);\n\n\t// Output data\n\t(taken from the d3-array docs): an array of bins, where each bin is an array containing the associated elements from the input data. Thus, the length of the bin is the number of elements in that bin. Each bin has two additional attributes:\n\n\tx0 - the lower bound of the bin (inclusive).\n\tx1 - the upper bound of the bin (exclusive, except for the last bin).\n\n\t[\n\t\t[ { myX: 0 }, { myX: 1 }, { myX: 1 }, x0: 0, x1: 2 ],\n\t\t[ { myX: 2 }, { myX: 2 }, x0: 2, x1: 4 ],\n\t\t[ { myX: 4 }, { myX: 4 }, x0: 4, x1: 6 ],\n\t\t[ { myX: 7 }, x0: 6, x1: 8 ],\n\t\t[ { myX: 8 }, x0: 8, x1: 10 ]\n\t]\n\n\t@param {Array} data The data to be binned.\n\t@param {String|Number|Function} [value] Optional. An accessor function passed to `bin.value()`. Defaults to an identity function. If this is a string or number, it will be transformed into an accessor for that key.\n\t@param {Object} options Options object\n\t@param {Array} [options.domain] Optional. The domain passed to `bin.domain()`. Pass in your own domain if you'd like, otherwise computed automatically.\n\t@param {Number|Array|Function} [options.thresholds] Optional. The thresholds passed to `bin.thresholds()`, otherwise computed automatically.\n\n\t@returns {Array} binData An array of bin arrays\n*/\nimport { bin as d3Bin } from 'd3-array';\n\nexport default function bin(data, value, { domain, thresholds } = {}) {\n\tif (typeof data !== 'object') {\n\t\tthrow new TypeError('The first argument of bin() must be an array or data object');\n\t}\n\tlet hist = d3Bin();\n\n\tif (value) {\n\t\tconst acc = typeof value === 'function' ? value : d => d[value];\n\t\thist = hist.value(acc);\n\t}\n\tif (domain) {\n\t\thist = hist.domain(domain);\n\t}\n\tif (thresholds) {\n\t\thist = hist.thresholds(thresholds);\n\t}\n\n\treturn hist(data);\n}\n", "/**\n\tStack your data with `.stack()` from d3 - shape for stacked bar or area charts\n\tA wrapper around [d3-shape.stack](https://github.com/d3/d3-shape#stack)\n\n\t// Input data\n\tconst data = [\n    {month: '2015-01-01', apples: 320,  bananas: 480,  cherries: 640, dates: 400}\n    {month: '2015-02-01', apples: 640,  bananas: 960,  cherries: 740, dates: 500},\n    {month: '2015-03-01', apples: 1600, bananas: 1440, cherries: 920, dates: 600},\n    {month: '2015-04-01', apples: 3840, bananas: 1920, cherries: 960, dates: 700},\n  ];\n\n\t// Usage\n\tstack(data, ['apples', 'bananas', 'cherries', 'dates'])\n\n\t// Output data\n\tstackData equals an array of values. The `month` values you can't see because sneakily stashes them as a property on the array, accessible as `d.data`.\n  [\n\t\t[ [   0, 320],  [   0,  640], [   0, 1600], [   0, 3840] ], // apples\n\t\t[ [ 320, 800],  [ 640, 1600], [1600, 3040], [3840, 5760] ], // bananas\n\t\t[ [ 800, 1440], [1600, 2340], [3040, 3960], [5760, 6720] ], // cherries\n\t\t[ [1440, 1840], [2340, 2840], [3960, 4560], [6720, 7420] ]  // dates\n\t]\n\n\t@param {Array} data The data to be stacked.\n\t@param {Array|Function} keys The group names to stack, passed to `stack.keys()`.\n\t@param {Object} options Options object\n\t@param {String|Number|Function} [options.value] An accessor function passed to `stack.value()`. If this is a string or number, it will be transformed into an accessor for that key.\n\t@param {Array|Function} [options.order] The stack order passed to `stack.order()`.\n\t@param {Function} [options.offset] The offset function passed to `stack.offset()`.\n\n\t@returns {Array} stackedData The transformed data\n */\n\nimport { stack as d3Stack } from 'd3-shape';\n\nexport default function stack(data, keys, { value, order, offset } = {}) {\n\tif (typeof data !== 'object') {\n\t\tthrow new TypeError('The first argument of stack() must be an array or data object');\n\t}\n\tif (!Array.isArray(keys)) {\n\t\tthrow new TypeError('The second argument of stack() must be an array of key names');\n\t}\n\tlet stacker = d3Stack().keys(keys);\n\n\tif (value) {\n\t\tstacker = stacker.value(value);\n\t}\n\tif (order) {\n\t\tstacker = stacker.order(order);\n\t}\n\tif (offset) {\n\t\tstacker = stacker.offset(offset);\n\t}\n\n\treturn stacker(data);\n}\n", "/**\n  Pivots your data by \"lengthening\" it - increasing the number\n  of rows and decreasing the number of columns.\n  Similar to R's tidyverse [pivot_longer function](https://tidyr.tidyverse.org/reference/pivot_longer.html)\n\n  // Input data\n  const data = [\n\t\t{ month: '2015-01-01', apples: 320, bananas: 480, cherries: 640, dates: 400 },\n\t\t{ month: '2015-02-01', apples: 640, bananas: 960, cherries: 640, dates: 500 },\n    { month: '2015-03-01', apples: 1600, bananas: 1440, cherries: 960, dates: 600 }\n  ];\n\n\t// Usage\n\tgroupLonger(data, ['apples', 'bananas', 'cherries', 'dates']);\n\n  // Output\n  [{\n  \tgroup: 'apples',\n  \tvalues: [\n  \t\t{ month: '2010-01-01', value: 320 },\n  \t\t{ month: '2010-02-01', value: 640 },\n  \t\t// ...\n  \t]\n  },\n  // etc...\n  ]\n  --------------------------------------------\n\n\t@param {Array} data The data to be transformed.\n\t@param {Array} keys The groups names to break out into separate groups.\n\t@param {Object} options Options object\n\t@param {String} [options.groupTo='group'] This name of the field that is added to each group object. Defaults to 'group'. This field is also added to each row of data.\n\t@param {String} [options.valueTo='value'] The name of the new field on each row of data to store the value under. Defaults to 'value'.\n\t@param {String[]} [options.keepKeys] Any keys we want to explicitly keep. If this is unset, all keys not specified in your groups will be kept. The list of full keys is determined by naively looking at the first row of the data.\n\n\t@returns {Array} [dataLong] The transformed data that is a list of one object for each group. Each object has `key` and `values` where `key` is the group name and `values` is a list of transformed data.\n*/\n\nexport default function groupLonger(\n\tdata,\n\tkeys,\n\t{ groupTo = 'group', valueTo = 'value', keepKeys = undefined } = {}\n) {\n\tif (!Array.isArray(data)) {\n\t\tthrow new TypeError('The first argument of groupLonger() must be an array of data');\n\t}\n\tif (!Array.isArray(keys)) {\n\t\tthrow new TypeError('The second argument of groupLonger() must be an array of key names');\n\t}\n\tconst keysSet = new Set(keys);\n\tconst keep = keepKeys || Object.keys(data[0]).filter(d => !keysSet.has(d));\n\n\treturn keys.map(key => {\n\t\treturn {\n\t\t\t[groupTo]: key,\n\t\t\tvalues: data.map(d => {\n\t\t\t\treturn {\n\t\t\t\t\t...Object.fromEntries(keep.map(k => [k, d[k]])),\n\t\t\t\t\t[valueTo]: d[key],\n\t\t\t\t\t[groupTo]: key\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t});\n}\n"],
  "mappings": "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",
  "names": ["uniques", "set", "$_xScale", "$_yScale", "$_rScale", "$_zScale", "$_xDomainSort", "$_yDomainSort", "$_zDomainSort", "$_rDomainSort", "$xScale_d", "$yScale_d", "$zScale_d", "$rScale_d", "bin"]
}
