/** @typedef {typeof __propDef.props}  LayerCakeProps */
/** @typedef {typeof __propDef.events}  LayerCakeEvents */
/** @typedef {typeof __propDef.slots}  LayerCakeSlots */
/** Layer Cake component */
export default class LayerCake extends SvelteComponentTyped<{
    r?: string | Function | number | Array<string | Function | number> | undefined;
    y?: string | Function | number | Array<string | Function | number> | undefined;
    x?: string | Function | number | Array<string | Function | number> | undefined;
    z?: string | Function | number | Array<string | Function | number> | undefined;
    ssr?: boolean | undefined;
    pointerEvents?: boolean | undefined;
    position?: string | undefined;
    percentRange?: boolean | undefined;
    width?: number | undefined;
    height?: number | undefined;
    containerWidth?: number | undefined;
    containerHeight?: number | undefined;
    element?: Element | undefined;
    data?: Object | Object[] | undefined;
    xDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
    yDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
    zDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
    rDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
    xNice?: number | boolean | undefined;
    yNice?: number | boolean | undefined;
    zNice?: number | boolean | undefined;
    rNice?: boolean | undefined;
    xPadding?: [leftPixels: number, rightPixels: number] | undefined;
    yPadding?: [leftPixels: number, rightPixels: number] | undefined;
    zPadding?: [leftPixels: number, rightPixels: number] | undefined;
    rPadding?: [leftPixels: number, rightPixels: number] | undefined;
    xScale?: Function | undefined;
    yScale?: Function | undefined;
    zScale?: Function | undefined;
    rScale?: Function | undefined;
    xRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
    yRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
    zRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
    rRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
    xReverse?: boolean | undefined;
    yReverse?: boolean | undefined;
    zReverse?: boolean | undefined;
    rReverse?: boolean | undefined;
    xDomainSort?: boolean | undefined;
    yDomainSort?: boolean | undefined;
    zDomainSort?: boolean | undefined;
    rDomainSort?: boolean | undefined;
    padding?: {
        top?: number;
        right?: number;
        bottom?: number;
        left?: number;
    } | undefined;
    extents?: {
        x?: [min: number, max: number];
        y?: [min: number, max: number];
        r?: [min: number, max: number];
        z?: [min: number, max: number];
    } | undefined;
    flatData?: Array<Object | Array<any>> | undefined;
    custom?: Object | undefined;
    debug?: boolean | undefined;
    verbose?: boolean | undefined;
}, {
    [evt: string]: CustomEvent<any>;
}, {
    default: {
        element: Element | undefined;
        width: number;
        height: number;
        aspectRatio: number;
        containerWidth: number;
        containerHeight: number;
        activeGetters: {
            x: Function;
            y: Function;
            z: Function;
            r: Function;
        };
        percentRange: boolean;
        x: Function;
        y: Function;
        z: Function;
        r: Function;
        custom: Object;
        data: Object | Object[];
        xNice: number | boolean;
        yNice: number | boolean;
        zNice: number | boolean;
        rNice: boolean;
        xDomainSort: boolean;
        yDomainSort: boolean;
        zDomainSort: boolean;
        rDomainSort: boolean;
        xReverse: boolean;
        yReverse: boolean;
        zReverse: boolean;
        rReverse: boolean;
        xPadding: [leftPixels: number, rightPixels: number];
        yPadding: [leftPixels: number, rightPixels: number];
        zPadding: [leftPixels: number, rightPixels: number];
        rPadding: [leftPixels: number, rightPixels: number];
        padding: {
            top: number;
            right: number;
            bottom: number;
            left: number;
        } & {
            top?: number;
            right?: number;
            bottom?: number;
            left?: number;
        };
        flatData: Object;
        extents: {};
        xDomain: any;
        yDomain: any;
        zDomain: any;
        rDomain: any;
        xRange: any;
        yRange: any;
        zRange: any;
        rRange: any;
        config: {};
        xScale: any;
        xGet: any;
        yScale: any;
        yGet: any;
        zScale: any;
        zGet: any;
        rScale: any;
        rGet: any;
    };
}> {
}
export type LayerCakeProps = typeof __propDef.props;
export type LayerCakeEvents = typeof __propDef.events;
export type LayerCakeSlots = typeof __propDef.slots;
import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        r?: string | Function | number | Array<string | Function | number> | undefined;
        y?: string | Function | number | Array<string | Function | number> | undefined;
        x?: string | Function | number | Array<string | Function | number> | undefined;
        z?: string | Function | number | Array<string | Function | number> | undefined;
        ssr?: boolean | undefined;
        pointerEvents?: boolean | undefined;
        position?: string | undefined;
        percentRange?: boolean | undefined;
        width?: number | undefined;
        height?: number | undefined;
        containerWidth?: number | undefined;
        containerHeight?: number | undefined;
        element?: Element | undefined;
        data?: Object | Object[] | undefined;
        xDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
        yDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
        zDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
        rDomain?: [min: number | null, max: number | null] | Array<string | number> | Function | undefined;
        xNice?: number | boolean | undefined;
        yNice?: number | boolean | undefined;
        zNice?: number | boolean | undefined;
        rNice?: boolean | undefined;
        xPadding?: [leftPixels: number, rightPixels: number] | undefined;
        yPadding?: [leftPixels: number, rightPixels: number] | undefined;
        zPadding?: [leftPixels: number, rightPixels: number] | undefined;
        rPadding?: [leftPixels: number, rightPixels: number] | undefined;
        xScale?: Function | undefined;
        yScale?: Function | undefined;
        zScale?: Function | undefined;
        rScale?: Function | undefined;
        xRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
        yRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
        zRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
        rRange?: [min: number, max: number] | Function | Array<string | number> | undefined;
        xReverse?: boolean | undefined;
        yReverse?: boolean | undefined;
        zReverse?: boolean | undefined;
        rReverse?: boolean | undefined;
        xDomainSort?: boolean | undefined;
        yDomainSort?: boolean | undefined;
        zDomainSort?: boolean | undefined;
        rDomainSort?: boolean | undefined;
        padding?: {
            top?: number;
            right?: number;
            bottom?: number;
            left?: number;
        } | undefined;
        extents?: {
            x?: [min: number, max: number];
            y?: [min: number, max: number];
            r?: [min: number, max: number];
            z?: [min: number, max: number];
        } | undefined;
        flatData?: Array<Object | Array<any>> | undefined;
        custom?: Object | undefined;
        debug?: boolean | undefined;
        verbose?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            element: Element | undefined;
            width: number;
            height: number;
            aspectRatio: number;
            containerWidth: number;
            containerHeight: number;
            activeGetters: {
                x: Function;
                y: Function;
                z: Function;
                r: Function;
            };
            percentRange: boolean;
            x: Function;
            y: Function;
            z: Function;
            r: Function;
            custom: Object;
            data: Object | Object[];
            xNice: number | boolean;
            yNice: number | boolean;
            zNice: number | boolean;
            rNice: boolean;
            xDomainSort: boolean;
            yDomainSort: boolean;
            zDomainSort: boolean;
            rDomainSort: boolean;
            xReverse: boolean;
            yReverse: boolean;
            zReverse: boolean;
            rReverse: boolean;
            xPadding: [leftPixels: number, rightPixels: number];
            yPadding: [leftPixels: number, rightPixels: number];
            zPadding: [leftPixels: number, rightPixels: number];
            rPadding: [leftPixels: number, rightPixels: number];
            padding: {
                top: number;
                right: number;
                bottom: number;
                left: number;
            } & {
                top?: number;
                right?: number;
                bottom?: number;
                left?: number;
            };
            flatData: Object;
            extents: {};
            xDomain: any;
            yDomain: any;
            zDomain: any;
            rDomain: any;
            xRange: any;
            yRange: any;
            zRange: any;
            rRange: any;
            config: {};
            xScale: any;
            xGet: any;
            yScale: any;
            yGet: any;
            zScale: any;
            zGet: any;
            rScale: any;
            rGet: any;
        };
    };
};
export {};
